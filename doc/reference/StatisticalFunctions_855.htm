<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
	<title>Decompiled Code For TRIMMEAN( C855, D855 ) - Abacus Formula Compiler for Java</title>
    <style media="screen" type="text/css">
		
    </style>
	<link href="../../style_screen.css" rel="stylesheet" media="screen" type="text/css" /><link href="../../style_print.css" rel="stylesheet" media="print" type="text/css" /><link href="refstyle.css" rel="stylesheet" type="text/css" />

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-1112076-2");
pageTracker._initData();
pageTracker._trackPageview();
</script>
</head>

<body>
	<div id="outer">
		<div id="left_background">
		</div>
		<div id="top_background">
		</div>
		
		<div class="chrome" id="top_chrome">
			<div id="logo_band">
				<img src="../../site_img/header_bar.gif" alt="AFC - Abacus Formula Compiler for Java" />
			</div>
			<div id="area_band">
				<div id="download_band">
					<a href="../../download/index.htm">
						<img src="../../site_img/download_button.png" />
					</a>
				</div>
				<table height="100%"><tr height="100%"><td style="vertical-align:middle">
						
					<a href="../../index.htm">Home</a> | 
						
					<a href="../../quick.htm">Quick Start</a> | <span class="selected"><a href="../../doc/index.htm">Documentation</a></span> | <a href="../../download/index.htm">Download</a> | <a href="../../support/index.htm">Support</a> | <a href="../../contribute/index.htm">Contribute</a>
				</td></tr></table>
			</div>
		</div>

		<div id="inner">
			<div class="chrome" id="inner_top_chrome">
				<div id="crumbs_band">
					<a href="../../index.htm">Home</a> &gt; <a href="../index.htm">Documentation</a> &gt; <a href="index.htm">Reference</a> &gt; 
				</div>
			</div>

			<div class="content" id="content">

<h1>Decompiled Code For <code>TRIMMEAN( C855, D855 )</code></h1>

	<p>The expression</p>


<pre><code>=TRIMMEAN( C855, D855 )</code></pre>
	<p>is compiled to the following class(es):</p>


<pre class="java"><span class="j-key">package </span>org.formulacompiler.gen;
<span class="j-key">import </span>org.formulacompiler.runtime.Computation;
<span class="j-key">import </span>org.formulacompiler.runtime.internal.Environment;
<span class="j-key">import </span>org.formulacompiler.runtime.internal.RuntimeDouble_v2;
<span class="j-key">import </span>org.formulacompiler.runtime.internal.Runtime_v2;
<span class="j-key">import </span>org.formulacompiler.tests.reference.base.Inputs;
<span class="j-key">import </span>org.formulacompiler.tests.reference.base.Outputs;

<span class="j-key">final class </span>$Root <span class="j-key">extends </span>Outputs <span class="j-key">implements </span>Computation
<span class="j-sym">{
    </span><span class="j-key">private final </span>Inputs $inputs;
    <span class="j-key">final </span>Environment $environment;

    $Root<span class="j-sym">(</span>Inputs inputs, Environment environment<span class="j-sym">) {
        </span>$environment = environment;
        $inputs = inputs;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$0<span class="j-sym">() {
        </span><span class="j-typ">double </span>d;
        <span class="j-key">if </span><span class="j-sym">(</span>!<span class="j-sym">(</span>get$2<span class="j-sym">() </span>&gt;= <span class="j-num">0.0</span><span class="j-sym">) </span>|| get$2<span class="j-sym">() </span>&gt;= <span class="j-num">1.0</span><span class="j-sym">) {
            </span>Runtime_v2.fun_ERROR<span class="j-sym">(</span><span class="j-str">&#34;#NUM! because not 0 &lt;= k &lt; 1 in TRIMMEAN&#34;</span><span class="j-sym">)</span>;
            d = <span class="j-sym">(</span><span class="j-typ">double</span><span class="j-sym">) </span>-<span class="j-num">1</span>;
        <span class="j-sym">} </span><span class="j-key">else if </span><span class="j-sym">(</span>Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">) </span>== <span class="j-num">0.0</span><span class="j-sym">)
            </span>d = get$3<span class="j-sym">()</span>;
        <span class="j-key">else </span><span class="j-sym">{
            </span>$Root root_0_ = <span class="j-key">this</span>;
            <span class="j-typ">double </span>d_2_;
            <span class="j-typ">double </span>d_1_ = d_2_ = Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">)</span>;
            <span class="j-typ">double </span>d_3_;
            <span class="j-key">if </span><span class="j-sym">(</span>!<span class="j-sym">(</span><span class="j-num">1.0 </span>- Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">) </span>+ <span class="j-num">1.0 </span>&lt;= <span class="j-num">1.0</span><span class="j-sym">)
                </span>|| <span class="j-num">1.0 </span>- Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">) </span>+ <span class="j-num">1.0 </span>&lt; <span class="j-num">1.0</span><span class="j-sym">) {
                </span>Runtime_v2
                    .fun_ERROR<span class="j-sym">(</span><span class="j-str">&#34;#NUM! because not 1 &lt;= k &lt;= n in SMALL/LARGE&#34;</span><span class="j-sym">)</span>;
                d_3_ = <span class="j-sym">(</span><span class="j-typ">double</span><span class="j-sym">) </span>-<span class="j-num">1</span>;
            <span class="j-sym">} </span><span class="j-key">else </span><span class="j-sym">{
                </span><span class="j-typ">double </span>d_4_;
                d_3_ = get$5<span class="j-sym">(</span>d_4_
                             = <span class="j-num">1.0 </span>- Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">) </span>+ <span class="j-num">1.0</span><span class="j-sym">)</span>;
            <span class="j-sym">}
            </span><span class="j-typ">double </span>d_6_;
            <span class="j-typ">double </span>d_5_ = d_6_ = d_3_;
            <span class="j-typ">double </span>d_7_;
            <span class="j-key">if </span><span class="j-sym">(</span>!<span class="j-sym">(</span>Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">) </span>&lt;= <span class="j-num">1.0</span><span class="j-sym">)
                </span>|| Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">) </span>&lt; <span class="j-num">1.0</span><span class="j-sym">) {
                </span>Runtime_v2
                    .fun_ERROR<span class="j-sym">(</span><span class="j-str">&#34;#NUM! because not 1 &lt;= k &lt;= n in SMALL/LARGE&#34;</span><span class="j-sym">)</span>;
                d_7_ = <span class="j-sym">(</span><span class="j-typ">double</span><span class="j-sym">) </span>-<span class="j-num">1</span>;
            <span class="j-sym">} </span><span class="j-key">else </span><span class="j-sym">{
                </span><span class="j-typ">double </span>d_8_;
                d_7_ = get$7<span class="j-sym">(</span>d_8_ = Math.floor<span class="j-sym">(</span>get$2<span class="j-sym">() </span>* <span class="j-num">1.0 </span>/ <span class="j-num">2.0</span><span class="j-sym">))</span>;
            <span class="j-sym">}
            </span><span class="j-typ">double </span>d_9_;
            d = root_0_.get$4<span class="j-sym">(</span>d_1_, d_5_, d_9_ = d_7_<span class="j-sym">)</span>;
        <span class="j-sym">}
        </span><span class="j-key">return </span>d;
    <span class="j-sym">}

    </span><span class="j-key">public final </span><span class="j-typ">double </span>dbl<span class="j-sym">() {
        </span><span class="j-key">return </span>get$0<span class="j-sym">()</span>;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$3<span class="j-sym">() {
        </span><span class="j-typ">double </span>d = <span class="j-num">0.0</span>;
        d += get$1<span class="j-sym">()</span>;
        <span class="j-key">return </span>d / <span class="j-num">1.0</span>;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$4<span class="j-sym">(</span><span class="j-typ">double </span>d, <span class="j-typ">double </span>d_10_, <span class="j-typ">double </span>d_11_<span class="j-sym">) {
        </span><span class="j-typ">double </span>d_12_ = <span class="j-num">0.0</span>;
        <span class="j-typ">double </span>d_13_ = <span class="j-num">0.0</span>;
        <span class="j-typ">double </span>d_14_ = <span class="j-num">0.0</span>;
        d_12_ = get$1<span class="j-sym">() </span>&lt; d_10_ &amp;#<span class="j-num">38</span>;&amp;#<span class="j-num">38</span>; get$1<span class="j-sym">() </span>&gt; d_11_ ? d_12_ + get$1<span class="j-sym">() </span>: d_12_;
        d_13_ = get$1<span class="j-sym">() </span>&gt;= d_10_ ? d_13_ + <span class="j-num">1.0 </span>: d_13_;
        d_14_ = get$1<span class="j-sym">() </span>&lt;= d_11_ ? d_14_ + <span class="j-num">1.0 </span>: d_14_;
        <span class="j-key">return </span><span class="j-sym">((</span>d_12_ + <span class="j-sym">(</span>d_13_ - d<span class="j-sym">) </span>* d_10_ + <span class="j-sym">(</span>d_14_ - d<span class="j-sym">) </span>* d_11_<span class="j-sym">)
                </span>/ <span class="j-sym">(</span><span class="j-num">1.0 </span>- <span class="j-num">2.0 </span>* d<span class="j-sym">))</span>;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$5<span class="j-sym">(</span><span class="j-typ">double </span>d<span class="j-sym">) {
        </span><span class="j-typ">double </span>d_15_ = -<span class="j-num">1.7976931348623157</span>E308;
        <span class="j-typ">double </span>d_16_ = <span class="j-num">1.0</span>;
        d_15_ = d_16_ &gt; d ? d_15_ : get$6<span class="j-sym">(</span>d_16_, d_15_<span class="j-sym">)</span>;
        d_16_++;
        <span class="j-key">return </span>d_15_;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$6<span class="j-sym">(</span><span class="j-typ">double </span>d, <span class="j-typ">double </span>d_17_<span class="j-sym">) {
        </span><span class="j-typ">double </span>d_18_ = <span class="j-num">1.7976931348623157</span>E308;
        <span class="j-typ">double </span>d_19_ = <span class="j-num">0.0</span>;
        d_18_ = get$1<span class="j-sym">() </span>&gt; d_17_ ? RuntimeDouble_v2.min<span class="j-sym">(</span>get$1<span class="j-sym">()</span>, d_18_<span class="j-sym">) </span>: d_18_;
        d_19_ = get$1<span class="j-sym">() </span>&lt;= d_17_ ? d_19_ + <span class="j-num">1.0 </span>: d_19_;
        <span class="j-key">return </span>d_19_ &gt;= d ? d_17_ : d_18_;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$7<span class="j-sym">(</span><span class="j-typ">double </span>d<span class="j-sym">) {
        </span><span class="j-typ">double </span>d_20_ = -<span class="j-num">1.7976931348623157</span>E308;
        <span class="j-typ">double </span>d_21_ = <span class="j-num">1.0</span>;
        d_20_ = d_21_ &gt; d ? d_20_ : get$8<span class="j-sym">(</span>d_21_, d_20_<span class="j-sym">)</span>;
        d_21_++;
        <span class="j-key">return </span>d_20_;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$8<span class="j-sym">(</span><span class="j-typ">double </span>d, <span class="j-typ">double </span>d_22_<span class="j-sym">) {
        </span><span class="j-typ">double </span>d_23_ = <span class="j-num">1.7976931348623157</span>E308;
        <span class="j-typ">double </span>d_24_ = <span class="j-num">0.0</span>;
        d_23_ = get$1<span class="j-sym">() </span>&gt; d_22_ ? RuntimeDouble_v2.min<span class="j-sym">(</span>get$1<span class="j-sym">()</span>, d_23_<span class="j-sym">) </span>: d_23_;
        d_24_ = get$1<span class="j-sym">() </span>&lt;= d_22_ ? d_24_ + <span class="j-num">1.0 </span>: d_24_;
        <span class="j-key">return </span>d_24_ &gt;= d ? d_22_ : d_23_;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$1<span class="j-sym">() {
        </span><span class="j-key">return </span>$inputs.dbl<span class="j-sym">(</span><span class="j-num">0</span><span class="j-sym">)</span>;
    <span class="j-sym">}

    </span><span class="j-key">final </span><span class="j-typ">double </span>get$2<span class="j-sym">() {
        </span><span class="j-key">return </span>$inputs.dbl<span class="j-sym">(</span><span class="j-num">1</span><span class="j-sym">)</span>;
    <span class="j-sym">}
}</span></pre>

			</div>
			<div class="chrome" id="inner_bottom_chrome">
			</div>
		</div>
		
		
		
		<div class="chrome" id="left_top_chrome">
			<div id="area_toc"><div class="area"><a href="../../doc/design.htm">Design Overview</a></div>
<div class="area"><a href="../../doc/tutorial/index.htm">Tutorial</a></div>
<div class="area"><span class="selected"><a href="../../doc/reference/index.htm">Function Reference</a></span></div>
<div class="nested">
<div class="area"><span class="selected">Decompiled Code For TRIMMEAN( C855, D855 )</span></div>
</div>
<div class="area"><a href="../../doc/javadoc/index.html">API Reference</a></div>
<div class="area"><a href="../../doc/examples/index.htm">Sample Applications</a></div>
<div class="area"><a href="../../doc/impl/index.htm">Implementation Details</a></div>
<div class="area"><a href="../../doc/limitations.htm">Limitations</a></div></div>
		</div>
		</div>
		<div class="chrome" id="left_bottom_chrome">
			<div id="copyright">
				Copyright &copy; 2005-2009 by <a href="http://www.abacus.ch/">Abacus Research AG</a>.  All rights reserved.
			</div>
		</div>
	
</body>
</html>
